FROM nvidia/cudagl:11.4.2-devel-ubuntu20.04

ENV DEBIAN_FRONTEND=noninteractive

ARG USERNAME=user
ARG WKDIR=/home/${USERNAME}
ARG TAG=v2.50.0
WORKDIR ${WKDIR}

RUN apt-get update \
    && apt-get install -y --install-recommends \
        libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev \
        automake autoconf libpng-dev nano python3-pip \
        curl zip unzip libtool swig zlib1g-dev pkg-config \
        python3-mock libpython3-dev libpython3-all-dev \
        g++ gcc cmake make pciutils cpio gosu wget udev \
        libgtk-3-dev libxtst-dev sudo apt-transport-https \
        build-essential gnupg git xz-utils vim libyaml-cpp-dev \
        libva-drm2 libva-x11-2 vainfo libva-wayland2 libva-glx2 \
        libva-dev libdrm-dev xorg xorg-dev protobuf-compiler \
        openbox libx11-dev libgl1-mesa-glx libgl1-mesa-dev \
        libtbb2 libtbb-dev libopenblas-dev libopenmpi-dev \
        python-is-python3 libusb-1.0-0-dev libssl-dev \
        mesa-utils \
    && pip install pip --upgrade \
    && sed -i 's/# set linenumbers/set linenumbers/g' /etc/nanorc \
    && apt clean \
    && rm -rf /var/lib/apt/lists/*

RUN git clone --depth 1 -b ${TAG} https://github.com/IntelRealSense/librealsense.git \
    && cd librealsense \
    && mkdir build \
    && cd build \
    && cmake \
        -D BUILD_WITH_CUDA=ON \
        -D BUILD_PYTHON_BINDINGS=ON \
        -D CMAKE_BUILD_TYPE=Release \
        -D BUILD_NETWORK_DEVICE=ON \
        .. \
    && make -j$(nproc) \
    && make install

RUN echo "root:root" | chpasswd \
    && adduser --disabled-password --gecos "" "${USERNAME}" \
    && adduser ${USERNAME} video \
    && echo "${USERNAME}:${USERNAME}" | chpasswd \
    && echo "%${USERNAME}    ALL=(ALL)   NOPASSWD:    ALL" >> /etc/sudoers.d/${USERNAME} \
    && chmod 0440 /etc/sudoers.d/${USERNAME}
USER ${USERNAME}
RUN sudo chown ${USERNAME}:${USERNAME} ${WKDIR} \
    && echo "export LIBGL_ALWAYS_INDIRECT=1" >> ${WKDIR}/.bashrc \
    && echo "export QT_X11_NO_MITSHM=1" >> ${WKDIR}/.bashrc \
    && echo "export QT_XCB_NO_MITSHM=1" >> ${WKDIR}/.bashrc \
    && echo "export XLIB_NO_SHM=1" >> ${WKDIR}/.bashrc \
    && echo "cd ${WKDIR}/workdir" >> ${WKDIR}/.bashrc
